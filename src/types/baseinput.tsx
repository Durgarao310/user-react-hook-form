export interface IBaseInput {
    id:string,
    label:string,
    type:string,
    value:string | number,
    onChange: (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => void,
    onBlur: (e: React.FocusEvent<HTMLInputElement | HTMLTextAreaElement>) => void,
    onFocus: (e: React.FocusEvent<HTMLInputElement | HTMLTextAreaElement>) => void,
    disabled?: boolean,
    readOnly?: boolean,
    autoFocus?: boolean,
    autoComplete?: string,
    placeholder?: string,
    icon?: React.ReactNode,
    iconPosition?: 'left' | 'right',
    showPasswordToggle?: boolean,
    showPassword?: boolean,
    togglePasswordVisibility?: () => void,
    size?: 'sm' | 'md' | 'lg',
    currentState: 'default' | 'filled' | 'error' | 'disabled' | 'readonly',
    inputClassName?: string,
    min?: number,
    max?: number,
    step?: number,
    textarea?: boolean,
    clearable?: boolean,
    onClear?: () => void,
    clearableIcon?: React.ReactNode,
    name: string,
    error?: string,
    helperText?: string,
    required?: boolean,
    className?: string,
    labelClassName?: string,
}